import torch

# choose between texture and no texture 
FACES_PATH = '/mnt/smb/locker/issa-locker/users/Josh/data/vbspl_texture_sizeVar_1ki'
FACES_PATH = '/mnt/smb/locker/issa-locker/users/Josh/data/vbspl_notexture_sizeVar_1ki'

IMAGENET_PATH = '/mnt/smb/locker/issa-locker/imagenet'
NEURAL_DATA_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/datasets/neural_data'
PSEUDOHVM_PATH = '/axsys/issa/shared'
HVM_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/datasets/imagesets/HVM'
HK2_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/datasets/imagesets/HK2'
RUST_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/datasets/imagesets/rust'


TMP_ACTS_FILE = '/local/hc3190/tmp_activations.hdf5'
# ACTS_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/data/activations/barlowtwins.hdf5'


#ACTS_PATH = '/home/hc3190/issa/disentangle/barlowtwins/data/activations.hdf5' # original one
# RESULTS_PATH = '/mnt/smb/locker/issa-locker/users/hc3190/data/results/barlowtwins.hdf5'
#RESULTS_PATH = '/home/ec3731/disentangle/barlowtwins/data/results/barlowtwins.hdf5'
RESULTS_PATH = '/mnt/smb/locker/issa-locker/users/Eugénie/data/results/barlowtwins.hdf5'
ACTS_PATH = '/mnt/smb/locker/issa-locker/users/Eugénie/data/activations/barlowtwins.hdf5'

# change depending which script is running
#CHECKPOINTS_PATH = '/home/ec3731/checkpoints/barlowtwins/checkpoints/'
CHECKPOINTS_PATH = '/home/ec3731/checkpoints/barlowtwins/backbone_equivariant/'
TENSORBOARD_PATH = '/home/ec3731/tensorboard/runs/barlowtwins'

DATASET_STATS = {
    'imagenet': [[0.485, 0.456, 0.406],[0.229, 0.224, 0.225]],
    'hk2': [[0.485, 0.456, 0.406],[0.229, 0.224, 0.225]],
}

SIZES = {
    'resnet50':{
        'layer1.0': torch.Size([256, 56, 56]), 
        'layer1.1': torch.Size([256, 56, 56]), 
        'layer1.2': torch.Size([256, 56, 56]), 
        'layer2.0': torch.Size([512, 28, 28]), 
        'layer2.1': torch.Size([512, 28, 28]), 
        'layer2.2': torch.Size([512, 28, 28]), 
        'layer2.3': torch.Size([512, 28, 28]), 
        'layer3.0': torch.Size([1024, 14, 14]), 
        'layer3.1': torch.Size([1024, 14, 14]), 
        'layer3.2': torch.Size([1024, 14, 14]), 
        'layer3.3': torch.Size([1024, 14, 14]), 
        'layer3.4': torch.Size([1024, 14, 14]), 
        'layer3.5': torch.Size([1024, 14, 14]), 
        'layer4.0': torch.Size([2048, 7, 7]), 
        'layer4.1': torch.Size([2048, 7, 7]), 
        'layer4.2': torch.Size([2048, 7, 7]), 
        'avgpool': torch.Size([2048, 1, 1]),
    }
}

ARCHS = {
    'moco_v1_noflip': 'resnet50',
    'moco_v2_noflip': 'resnet50',
    'modified_moco_v1_6': 'resnet50',
    'modified_moco_v1_8': 'resnet50',
    'modified_moco_v1_11': 'resnet50',
    'moco_v1_partition_decode': 'resnet50',
    'moco_v1_partition_decode_v2': 'resnet50',
    'moco_v1_no_contrastive': 'resnet50',
    'moco_v1_color_decode_v2': 'resnet50',
    'moco_v1_cam_color_decode_v1': 'resnet50',
    'moco_v1_factorize_v13': 'resnet50',
    'moco_v1_factorize_control_v6': 'resnet50',
    'moco_v1_factorize_control_v5': 'resnet50',
    'moco_v1_factorize2_v3': 'resnet50',
    'moco_v1_factorize_cam_color_decode_v1': 'resnet50',
    'moco_v1_cam_color_decode2_v2': 'resnet50',
    'moco_v1_factorize_cam_color_decode2_v2': 'resnet50',
    'moco_v1_factorize4_v7': 'resnet50',
    'moco_v1_factorize5_v1': 'resnet50',
    # pretrained models below
    'moco_v1_pretrained': 'resnet50',
    'moco_v2_pretrained': 'resnet50',
    'alexnet_pretrained': 'alexnet',
    'vgg11_pretrained': 'vgg11',
    'vgg13_pretrained': 'vgg13',
    'vgg16_pretrained': 'vgg16',
    'vgg19_pretrained': 'vgg19',
    'resnet18_pretrained': 'resnet18',
    'resnet34_pretrained': 'resnet34',
    'resnet50_pretrained': 'resnet50',
    'resnet101_pretrained': 'resnet101',
    'squeezenet1_0_pretrained': 'squeezenet1_0',
    'squeezenet1_1_pretrained': 'squeezenet1_1',
    'densenet121_pretrained': 'densenet121',
    'densenet161_pretrained': 'densenet161',
    'googlenet_pretrained': 'googlenet',
    'shufflenet_v2_x0_5_pretrained': 'shufflenet_v2_x0_5',
    'shufflenet_v2_x1_0_pretrained': 'shufflenet_v2_x1_0',
    'mobilenet_v2_pretrained': 'mobilenet_v2',
    'mobilenet_v3_small_pretrained': 'mobilenet_v3_small',
    'mobilenet_v3_large_pretrained': 'mobilenet_v3_large',
    'resnext50_32x4d_pretrained': 'resnext50_32x4d',
    'resnext101_32x8d_pretrained': 'resnext101_32x8d',
    'wide_resnet50_2_pretrained': 'wide_resnet50_2',
    'wide_resnet101_2_pretrained': 'wide_resnet101_2',
    'mnasnet0_5_pretrained': 'mnasnet0_5',
    'mnasnet1_0_pretrained': 'mnasnet1_0',
    # untrained models
    'alexnet_untrained': 'alexnet',
    'vgg11_untrained': 'vgg11',
    'vgg13_untrained': 'vgg13',
    'vgg16_untrained': 'vgg16',
    'vgg19_untrained': 'vgg19',
    'resnet18_untrained': 'resnet18',
    'resnet34_untrained': 'resnet34',
    'resnet50_untrained': 'resnet50',
    'resnet101_untrained': 'resnet101',
    'squeezenet1_0_untrained': 'squeezenet1_0',
    'squeezenet1_1_untrained': 'squeezenet1_1',
    'densenet121_untrained': 'densenet121',
    'densenet161_untrained': 'densenet161',
    'googlenet_untrained': 'googlenet',
    'shufflenet_v2_x0_5_untrained': 'shufflenet_v2_x0_5',
    'shufflenet_v2_x1_0_untrained': 'shufflenet_v2_x1_0',
    'mobilenet_v2_untrained': 'mobilenet_v2',
    'mobilenet_v3_small_untrained': 'mobilenet_v3_small',
    'mobilenet_v3_large_untrained': 'mobilenet_v3_large',
    'resnext50_32x4d_untrained': 'resnext50_32x4d',
    'resnext101_32x8d_untrained': 'resnext101_32x8d',
    'wide_resnet50_2_untrained': 'wide_resnet50_2',
    'wide_resnet101_2_untrained': 'wide_resnet101_2',
    'mnasnet0_5_untrained': 'mnasnet0_5',
    'mnasnet1_0_untrained': 'mnasnet1_0',
    # Jack's models
    'simclr_v1_resnet50_1x_pretrained': 'resnet50_1x_simclr',
    'simclr_v1_resnet50_2x_pretrained': 'resnet50_2x_simclr',
    'simclr_v1_crop_temp_point2_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_temp_point05_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_blur_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_pretrained': 'resnet50_simclr',
#     'resnet152_2x_simclr-v2-aug_pretrained': 'resnet152_2x', # does not currently work (Jack's resnet152_2x model doesn't work with my code)
    'simclr_v1_no_proj_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_color_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_color-slc_pretrained': 'resnet50_simclr',
    'simclr_v1_crop_color-slc_blur_pretrained': 'resnet50_simclr',
    'moco_v2_crop_color_grayscale_pretrained': 'resnet50',
    'moco_v2_crop_grayscale-always_pretrained': 'resnet50',
    'moco_v2_crop_pretrained': 'resnet50',
    'moco_v2_resnext50_32x4d_pretrained': 'resnext50_32x4d',
    'moco_v2_resnet18_pretrained': 'resnet18',
    'moco_v2_100_epochs_pretrained': 'resnet50',
    'moco_v2_800_epochs_pretrained': 'resnet50',
    'resnet50_simclr-v2-aug_pretrained': 'resnet50',
    'resnet50_moco-v2-aug_pretrained': 'resnet50',
    'resnet50_no-aug_pretrained': 'resnet50',
    'infomin_resnet50_800_epochs_pretrained': 'resnet50',
    'infomin_resnext101_32x8d_200_epochs_pretrained': 'resnext101_32x8d',
    'infomin_resnext152_32x8d_200_epochs_pretrained': 'resnext152_32x8d',
    'byol_pretrained': 'resnet50',
    'byol_crop_pretrained': 'resnet50',
    'byol_crop_blur_pretrained': 'resnet50',
    'byol_crop_color_pretrained': 'resnet50',
    'byol_no-color_pretrained': 'resnet50',
    'byol_no-grayscale_pretrained': 'resnet50',
    'byol_batchsize_512_pretrained': 'resnet50',
    'byol_batchsize_64_pretrained': 'resnet50',
    'swav_pretrained': 'resnet50',
    'deepcluster_v2_pretrained': 'resnet50',
    'jigsaw_resnet50_pretrained': 'resnet50',
    'colorization_resnet50_1c_pretrained': 'resnet50_1c',
    'barlowtwins_pretrained': 'resnet50',
    # barlow twins modified models
    'original_v1': 'resnet50',
    'original_v2': 'resnet50',
    'original_v3': 'resnet50',
    'equivariant_pos_v2': 'resnet50',
    'equivariant_pos_v3': 'resnet50',
    'equivariant_pos_bn_v1': 'resnet50',
    'equivariant_pos_bn_v2': 'resnet50',
    'equivariant_scale_v1': 'resnet50',
    'equivariant_scale_v2': 'resnet50',
    'equivariant_scale_v3': 'resnet50',
    'equivariant_scale_bn_v1': 'resnet50',
    'equivariant_scale_bn_v2': 'resnet50',
    'equivariant_color_v1': 'resnet50',
    'equivariant_color_bn_v1': 'resnet50',
    'equivariant_color_bn_v2': 'resnet50',
    'equivariant_all_v1': 'resnet50',
    'equivariant_all_bn_v2': 'resnet50',
    'factorize_avgpool_equivariant_all_bn_v4': 'resnet50',
    'factorize_avgpool_equivariant_all_bn_v5': 'resnet50',
    'factorize_avgpool_equivariant_all_bn_2_v1': 'resnet50',
    'factorize_avgpool_decode_avgpool_v2': 'resnet50',
    'factorize_avgpool_v1': 'resnet50',
    'factorize_avgpool_decode_avgpool_v3': 'resnet50',
    'decode_avgpool_v1': 'resnet50',
}

LAYERS = {
    'identity': [
        '',
    ],
    'resnet18': [
        'layer1.0',
        'layer1.1',
        'layer2.0',
        'layer2.1',
        'layer3.0',
        'layer3.1',
        'layer4.0',
        'layer4.1',
#         'avgpool', # Dimension of output too small for certain metric computations
    ],
    'resnet34': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
#         'avgpool', # Dimension of output too small for certain metric computations
    ],
    'resnet50': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_simclr': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_1c':[
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_1x': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_2x': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_1x_simclr': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet50_2x_simclr': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet101': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.2',
        'layer3.4',
        'layer3.6',
        'layer3.8',
        'layer3.10',
        'layer3.12',
        'layer3.14',
        'layer3.16',
        'layer3.18',
        'layer3.20',
        'layer3.22',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnet152_2x': [
        'layer1.0',
        'layer2.0',
        'layer2.3',
        'layer2.6',
        'layer3.0',
        'layer3.3',
        'layer3.6',
        'layer3.9',
        'layer3.12',
        'layer3.15',
        'layer3.18',
        'layer3.21',
        'layer3.24',
        'layer3.27',
        'layer3.30',
        'layer3.33',
        'layer4.0',
        'layer4.2',
        'avgpool',
    ],
    'alexnet': [
        'features.2',
        'features.5',
        'features.7',
        'features.9',
        'features.12',
        'avgpool',
        'classifier.2',
        'classifier.5',
    ],
    'vgg11': [
        'features.2',
        'features.5',
        'features.7',
        'features.10',
        'features.12',
        'features.15',
        'features.17',
        'features.20',
        'avgpool',
        'classifier.1',
        'classifier.4',
    ],
    'vgg13': [
        'features.1',
        'features.4',
        'features.6',
        'features.9',
        'features.11',
        'features.14',
        'features.16',
        'features.19',
        'features.21',
        'features.24',
        'avgpool',
        'classifier.1',
        'classifier.4',
    ],
    'vgg16': [
        'features.1',
        'features.4',
        'features.6',
        'features.9',
        'features.11',
        'features.13',
        'features.16',
        'features.18',
        'features.20',
        'features.23',
        'features.25',
        'features.27',
        'features.30',
        'avgpool',
        'classifier.1',
        'classifier.4',
    ],
    'vgg19': [
        'features.1',
        'features.4',
        'features.6',
        'features.9',
        'features.11',
        'features.13',
        'features.15',
        'features.18',
        'features.20',
        'features.22',
        'features.24',
        'features.27',
        'features.29',
        'features.31',
        'features.33',
        'features.36',
        'avgpool',
        'classifier.1',
        'classifier.4',
    ],
    'squeezenet1_0': [
        'features.2',
        'features.3',
        'features.4',
        'features.5',
        'features.7',
        'features.8',
        'features.9',
        'features.10',
        'features.12',
        'classifier.1',
    ],
    'squeezenet1_1': [
        'features.2',
        'features.3',
        'features.4',
        'features.6',
        'features.7',
        'features.9',
        'features.10',
        'features.11',
        'features.12',
        'classifier.1',
    ],
    'densenet121': [
        'features.pool0',
        'features.denseblock1.denselayer3',
        'features.denseblock1.denselayer6',
        'features.transition1',
        'features.denseblock2.denselayer3',
        'features.denseblock2.denselayer6',
        'features.denseblock2.denselayer9',
        'features.denseblock2.denselayer12',
        'features.transition2',
        'features.denseblock3.denselayer3',
        'features.denseblock3.denselayer6',
        'features.denseblock3.denselayer9',
        'features.denseblock3.denselayer12',
        'features.denseblock3.denselayer15',
        'features.denseblock3.denselayer18',
        'features.denseblock3.denselayer21',
        'features.denseblock3.denselayer24',
        'features.transition3',
        'features.denseblock4.denselayer3',
        'features.denseblock4.denselayer6',
        'features.denseblock4.denselayer9',
        'features.denseblock4.denselayer12',
        'features.denseblock4.denselayer15',
        'features.norm5',
    ],
    'densenet161': [
        'features.pool0',
        'features.denseblock1.denselayer4',
        'features.transition1',
        'features.denseblock2.denselayer4',
        'features.denseblock2.denselayer8',
        'features.denseblock2.denselayer12',
        'features.transition2',
        'features.denseblock3.denselayer4',
        'features.denseblock3.denselayer8',
        'features.denseblock3.denselayer12',
        'features.denseblock3.denselayer16',
        'features.denseblock3.denselayer20',
        'features.denseblock3.denselayer24',
        'features.denseblock3.denselayer28',
        'features.denseblock3.denselayer32',
        'features.denseblock3.denselayer36',
        'features.transition3',
        'features.denseblock4.denselayer4',
        'features.denseblock4.denselayer8',
        'features.denseblock4.denselayer12',
        'features.denseblock4.denselayer16',
        'features.denseblock4.denselayer20',
        'features.denseblock4.denselayer24',
        'features.norm5',
    ],
    'googlenet': [
        'maxpool1',
        'maxpool2',
        'inception3a',
        'inception3b',
        'maxpool3',
        'inception4a',
        'inception4b',
        'inception4c',
        'inception4d',
        'inception4e',
        'maxpool4',
        'inception5a',
        'inception5b',
#         'avgpool', # Dimension of output too small for certain metric computations
    ],
    'shufflenet_v2_x0_5': [
        'maxpool',
        'stage2.0',
        'stage2.1',
        'stage2.2',
        'stage2.3',
        'stage3.0',
        'stage3.1',
        'stage3.2',
        'stage3.3',
        'stage3.4',
        'stage3.5',
        'stage3.6',
        'stage3.7',
        'stage4.0',
        'stage4.1',
        'stage4.2',
        'stage4.3',
        'conv5',
    ],
    'shufflenet_v2_x1_0': [
        'maxpool',
        'stage2.0',
        'stage2.1',
        'stage2.2',
        'stage2.3',
        'stage3.0',
        'stage3.1',
        'stage3.2',
        'stage3.3',
        'stage3.4',
        'stage3.5',
        'stage3.6',
        'stage3.7',
        'stage4.0',
        'stage4.1',
        'stage4.2',
        'stage4.3',
        'conv5',
    ],
    'mobilenet_v2': [
        'features.0',
        'features.1',
        'features.2',
        'features.3',
        'features.4',
        'features.5',
        'features.6',
        'features.7',
        'features.8',
        'features.9',
        'features.10',
        'features.11',
        'features.12',
        'features.13',
        'features.14',
        'features.15',
        'features.16',
        'features.17',
        'features.18',
    ],
    'mobilenet_v3_small': [
        'features.0',
        'features.1',
        'features.2',
        'features.3',
        'features.4',
        'features.5',
        'features.6',
        'features.7',
        'features.8',
        'features.9',
        'features.10',
        'features.11',
        'features.12',
#         'avgpool', # Dimension of output too small for certain metric computations
    ],
    'mobilenet_v3_large': [
        'features.0',
        'features.1',
        'features.2',
        'features.3',
        'features.4',
        'features.5',
        'features.6',
        'features.7',
        'features.8',
        'features.9',
        'features.10',
        'features.11',
        'features.12',
        'features.13',
        'features.14',
        'features.15',
        'features.16',
#         'avgpool', # Dimension of output too small for certain metric computations
    ],
    'resnext50_32x4d': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnext101_32x8d': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.2',
        'layer3.4',
        'layer3.6',
        'layer3.8',
        'layer3.10',
        'layer3.12',
        'layer3.14',
        'layer3.16',
        'layer3.18',
        'layer3.20',
        'layer3.22',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'resnext152_32x8d': [
        'layer1.0',
        'layer2.0',
        'layer2.3',
        'layer2.6',
        'layer3.0',
        'layer3.3',
        'layer3.6',
        'layer3.9',
        'layer3.12',
        'layer3.15',
        'layer3.18',
        'layer3.21',
        'layer3.24',
        'layer3.27',
        'layer3.30',
        'layer3.33',
        'layer4.0',
        'layer4.2',
        'avgpool',
    ],
    'wide_resnet50_2': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.1',
        'layer3.2',
        'layer3.3',
        'layer3.4',
        'layer3.5',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'wide_resnet101_2': [
        'layer1.0',
        'layer1.1',
        'layer1.2',
        'layer2.0',
        'layer2.1',
        'layer2.2',
        'layer2.3',
        'layer3.0',
        'layer3.2',
        'layer3.4',
        'layer3.6',
        'layer3.8',
        'layer3.10',
        'layer3.12',
        'layer3.14',
        'layer3.16',
        'layer3.18',
        'layer3.20',
        'layer3.22',
        'layer4.0',
        'layer4.1',
        'layer4.2',
        'avgpool',
    ],
    'mnasnet0_5': [
        'layers.2',
        'layers.5',
        'layers.7',
        'layers.8.0',
        'layers.8.1',
        'layers.8.2',
        'layers.9.0',
        'layers.9.1',
        'layers.9.2',
        'layers.10.0',
        'layers.10.1',
        'layers.10.2',
        'layers.11.0',
        'layers.11.1',
        'layers.12.0',
        'layers.12.1',
        'layers.12.2',
        'layers.12.3',
        'layers.13.0',
        'layers.16',
    ],
    'mnasnet1_0': [
        'layers.2',
        'layers.5',
        'layers.7',
        'layers.8.0',
        'layers.8.1',
        'layers.8.2',
        'layers.9.0',
        'layers.9.1',
        'layers.9.2',
        'layers.10.0',
        'layers.10.1',
        'layers.10.2',
        'layers.11.0',
        'layers.11.1',
        'layers.12.0',
        'layers.12.1',
        'layers.12.2',
        'layers.12.3',
        'layers.13.0',
        'layers.16',
    ],
}

TARGET_INDICES = {
    'hk2-decoding': {
        'obj_class': 0,
        'cam_pos_x': 1,
        'cam_pos_y': 2,
        'cam_scale': 3,
        'brightness': 4,
        'contrast': 5,
        'saturation': 6,
        'hue': 7,
    },
    'hk2-generalize': {
        'obj_class': 0,
        'cam_pos_x': 1,
        'cam_pos_y': 2,
        'cam_scale': 3,
        'brightness': 4,
        'contrast': 5,
        'saturation': 6,
        'hue': 7,
    },
    'pseudo_hvm-factorize_crop_20': {
        'cam_pos_x': 3,
        'cam_pos_y': 4,
        'cam_scale': 5,
    },
    'hvm-neural_fits': {
        'obj_category': 0,
        'obj_class': 1,
        'obj_pos_x': 2,
        'obj_pos_y': 3,
        'obj_scale': 4,
        'obj_pose_x': 5,
        'obj_pose_y': 6,
        'obj_pose_z': 7,
    }
}
